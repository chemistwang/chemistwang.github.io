[{"author":null,"categories":["Tech"],"content":"webRTC","date":1676505600,"description":"webRTC","dir":"post/webrtc/","excerpt_html":"webRTC","excerpt_text":"webRTC","expirydate":-62135596800,"fuzzywordcount":1100,"html":"webRTC","keywords":null,"kind":"page","lang":"en","lastmod":1676505600,"objectID":"9abff8669737628b5705ca05d560bdcc","permalink":"https://chemistwang.github.io/post/webrtc/","publishdate":"2023-02-16T00:00:00Z","readingtime":3,"relpermalink":"/post/webrtc/","section":"post","summary":"WebRTC WebRTC（Web Real-Time Communication），是一个支持网页浏览器进行实时语音对话或视频对话的 API。它于 2011 年 6 月 1 日开源并在 Goo","tags":null,"title":"WebRTC（一）简介和基本原理","type":"post","url":"/post/webrtc/","weight":0,"wordcount":1036},{"author":null,"categories":["React"],"content":"","date":1675296e3,"description":"","dir":"post/react/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1675296e3,"objectID":"ed4fc3d0805da6426afe7d7dbc5434e4","permalink":"https://chemistwang.github.io/post/react/react-flow/","publishdate":"2023-02-02T00:00:00Z","readingtime":1,"relpermalink":"/post/react/react-flow/","section":"post","summary":"React Flow React Flow","tags":null,"title":"React Flow","type":"post","url":"/post/react/react-flow/","weight":0,"wordcount":4},{"author":null,"categories":["Tech"],"content":"","date":1673395200,"description":"","dir":"post/bff/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1e3,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1673395200,"objectID":"ca50d2ee18d0932607d264eab2ddeed3","permalink":"https://chemistwang.github.io/post/bff/serverless/","publishdate":"2023-01-11T00:00:00Z","readingtime":2,"relpermalink":"/post/bff/serverless/","section":"post","summary":"1. BFF 问题 复杂性增加：添加 BFF 层会增加系统的复杂性，因为它需要在后端 API 和前端应用程序之间处理请求和响应 性能问题：如果 BFF 层的实现不当，可能会导致性","tags":null,"title":"BFF（三）Serverless","type":"post","url":"/post/bff/serverless/","weight":0,"wordcount":959},{"author":null,"categories":["Tech"],"content":"","date":1673308800,"description":"","dir":"post/bff/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1673308800,"objectID":"a64ad5bb90ded4b7977d3e6921677cd4","permalink":"https://chemistwang.github.io/post/bff/code/","publishdate":"2023-01-10T00:00:00Z","readingtime":8,"relpermalink":"/post/bff/code/","section":"post","summary":"BFF 的落地实现 Github 完整项目地址 1. 前置知识 聊聊 Node.js RPC（一）— 协议 RPC(Remote Procedure Call) 是远程过程调用的缩写，是一种通信协议，允许程序在不同的计算机上相互调用远程","tags":null,"title":"BFF（二）BFF的落地实现","type":"post","url":"/post/bff/code/","weight":0,"wordcount":3558},{"author":null,"categories":["Tech"],"content":"","date":1673136e3,"description":"","dir":"post/bff/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1673136e3,"objectID":"c469f17649e622f469bbe0d0455dfa5c","permalink":"https://chemistwang.github.io/post/bff/evolution/","publishdate":"2023-01-08T00:00:00Z","readingtime":2,"relpermalink":"/post/bff/evolution/","section":"post","summary":"BFF 架构演进 1. 单体服务 单体服务是指一个独立的应用程序，包含了所有的功能和业务逻辑。这种架构方式在小型应用程序中很常见 随着应用程序的功能越来越多","tags":null,"title":"BFF（一）BFF架构演进","type":"post","url":"/post/bff/evolution/","weight":0,"wordcount":769},{"author":null,"categories":["Tech"],"content":"分久必合，合久必分","date":1672923600,"description":"分久必合，合久必分","dir":"post/micro-frontend/message/","excerpt_html":"分久必合，合久必分","excerpt_text":"分久必合，合久必分","expirydate":-62135596800,"fuzzywordcount":100,"html":"分久必合，合久必分","keywords":null,"kind":"page","lang":"en","lastmod":1672923600,"objectID":"14ddc009e0ba471944c252bccce62dd2","permalink":"https://chemistwang.github.io/post/micro-frontend/message/message/","publishdate":"2023-01-05T13:00:00Z","readingtime":1,"relpermalink":"/post/micro-frontend/message/message/","section":"post","summary":"主体框架搭建起来了，现在设想一个场景补充主应用和子应用之间的通信问题。 主应用登陆信息同步到子应用 主应用和子应用通信 g","tags":["qiankun"],"title":"微前端【qiankun】小试（三）主应用和子应用通信","type":"post","url":"/post/micro-frontend/message/message/","weight":0,"wordcount":58},{"author":null,"categories":["Tech"],"content":"分久必合，合久必分","date":1672923600,"description":"分久必合，合久必分","dir":"post/micro-frontend/deploy/","excerpt_html":"分久必合，合久必分","excerpt_text":"分久必合，合久必分","expirydate":-62135596800,"fuzzywordcount":100,"html":"分久必合，合久必分","keywords":null,"kind":"page","lang":"en","lastmod":1672923600,"objectID":"8a7d86dc995fcf741f70b54813d7337d","permalink":"https://chemistwang.github.io/post/micro-frontend/deploy/deploy/","publishdate":"2023-01-05T13:00:00Z","readingtime":0,"relpermalink":"/post/micro-frontend/deploy/deploy/","section":"post","summary":"","tags":["qiankun"],"title":"微前端【qiankun】小试（四）服务器部署","type":"post","url":"/post/micro-frontend/deploy/deploy/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"分久必合，合久必分","date":1672923600,"description":"分久必合，合久必分","dir":"post/micro-frontend/style/","excerpt_html":"分久必合，合久必分","excerpt_text":"分久必合，合久必分","expirydate":-62135596800,"fuzzywordcount":100,"html":"分久必合，合久必分","keywords":null,"kind":"page","lang":"en","lastmod":1672923600,"objectID":"48a82401f7b2318de7468cc0cda0039c","permalink":"https://chemistwang.github.io/post/micro-frontend/style/style/","publishdate":"2023-01-05T13:00:00Z","readingtime":0,"relpermalink":"/post/micro-frontend/style/style/","section":"post","summary":"","tags":["qiankun"],"title":"微前端【qiankun】小试（四）样式隔离","type":"post","url":"/post/micro-frontend/style/style/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"分久必合，合久必分","date":1672765200,"description":"分久必合，合久必分","dir":"post/micro-frontend/base-react/","excerpt_html":"分久必合，合久必分","excerpt_text":"分久必合，合久必分","expirydate":-62135596800,"fuzzywordcount":500,"html":"分久必合，合久必分","keywords":null,"kind":"page","lang":"en","lastmod":1672765200,"objectID":"2d9f24b196340b8f2e71bf22b4bc674e","permalink":"https://chemistwang.github.io/post/micro-frontend/base-react/base-react/","publishdate":"2023-01-03T17:00:00Z","readingtime":1,"relpermalink":"/post/micro-frontend/base-react/base-react/","section":"post","summary":"上一篇似乎一个初步的 demo 就已经跑起来了，在实践中我遇到过单点应用跳转多平台的需求，不妨趁机试着做成一个完整的 demo。 添加主应用和子应用视图 1.","tags":["qiankun"],"title":"微前端【qiankun】小试（二）添加主应用和子应用视图","type":"post","url":"/post/micro-frontend/base-react/base-react/","weight":0,"wordcount":461},{"author":null,"categories":["Tech"],"content":"分久必合，合久必分","date":1672750800,"description":"分久必合，合久必分","dir":"post/micro-frontend/init/","excerpt_html":"分久必合，合久必分","excerpt_text":"分久必合，合久必分","expirydate":-62135596800,"fuzzywordcount":1e3,"html":"分久必合，合久必分","keywords":null,"kind":"page","lang":"en","lastmod":1672750800,"objectID":"a50577be335210eba04b9d7cdf0f2035","permalink":"https://chemistwang.github.io/post/micro-frontend/init/init/","publishdate":"2023-01-03T13:00:00Z","readingtime":2,"relpermalink":"/post/micro-frontend/init/init/","section":"post","summary":"主应用和子应用初始化 基于 qiankun 2.8.4 前期准备 分别创建主应用和子应用 # 创建 base-react npx create-react-app base-react # 创建 mini-react18 npx create-react-app mini-react18 # 创建 mini-vue2 vue create mini-vue2 创建 .env 指定具体端口，方便管理 应用 端口 base-react 11110","tags":["qiankun"],"title":"微前端【qiankun】小试（一）主应用和子应用初始化","type":"post","url":"/post/micro-frontend/init/init/","weight":0,"wordcount":940},{"author":null,"categories":["Tech"],"content":"","date":1671408e3,"description":"","dir":"post/infrastructure/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1671408e3,"objectID":"3161e06ed5207670cb431c8ecc3dcecb","permalink":"https://chemistwang.github.io/post/infrastructure/owasp/","publishdate":"2022-12-19T00:00:00Z","readingtime":0,"relpermalink":"/post/infrastructure/owasp/","section":"post","summary":"","tags":null,"title":"前端基建之（七）web 安全扫描方案：OWASP ZAP","type":"post","url":"/post/infrastructure/owasp/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1671321600,"description":"","dir":"post/infrastructure/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1671321600,"objectID":"3c236c21c5bebc0f1b847456ab70f0a6","permalink":"https://chemistwang.github.io/post/infrastructure/sonarqube/","publishdate":"2022-12-18T00:00:00Z","readingtime":0,"relpermalink":"/post/infrastructure/sonarqube/","section":"post","summary":"","tags":null,"title":"前端基建之（六）代码 Review：Sonarqube","type":"post","url":"/post/infrastructure/sonarqube/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1671235200,"description":"","dir":"post/infrastructure/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1671235200,"objectID":"d31dcde1a2056445f2fcc0f4c1d8c9c5","permalink":"https://chemistwang.github.io/post/infrastructure/jenkins/","publishdate":"2022-12-17T00:00:00Z","readingtime":0,"relpermalink":"/post/infrastructure/jenkins/","section":"post","summary":"","tags":null,"title":"前端基建之（五）自动化部署：Jenkins 安装和配置","type":"post","url":"/post/infrastructure/jenkins/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1671148800,"description":"","dir":"post/infrastructure/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1671148800,"objectID":"3cffa8db2a10a6e1856cc367ee6a938e","permalink":"https://chemistwang.github.io/post/infrastructure/jest/","publishdate":"2022-12-16T00:00:00Z","readingtime":0,"relpermalink":"/post/infrastructure/jest/","section":"post","summary":"","tags":null,"title":"前端基建之（四）测试代码：Jest","type":"post","url":"/post/infrastructure/jest/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1671062400,"description":"","dir":"post/infrastructure/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1671062400,"objectID":"ba792dcfec7a62c5bc699cc8dcf102a8","permalink":"https://chemistwang.github.io/post/infrastructure/gitflow/","publishdate":"2022-12-15T00:00:00Z","readingtime":1,"relpermalink":"/post/infrastructure/gitflow/","section":"post","summary":"gitflow-workflow","tags":null,"title":"前端基建之（三）Git 分支策略和 GitFlow 工作流","type":"post","url":"/post/infrastructure/gitflow/","weight":0,"wordcount":1},{"author":null,"categories":["Tech"],"content":"","date":1670976e3,"description":"","dir":"post/infrastructure/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1670976e3,"objectID":"991c7a34306d6c2fc65b64081daf5c79","permalink":"https://chemistwang.github.io/post/infrastructure/convention/","publishdate":"2022-12-14T00:00:00Z","readingtime":2,"relpermalink":"/post/infrastructure/convention/","section":"post","summary":"前端基建之（二）项目约定 1. 技术约定 React（v18） React-Router V6 React-Redux Typescript 2. 命名 变量禁止拼音 文件夹用驼峰命名 参考的规范链接 凹凸实验室 腾讯 alloyteam 代码规范 百度 FEX","tags":null,"title":"前端基建之（二）项目约定","type":"post","url":"/post/infrastructure/convention/","weight":0,"wordcount":585},{"author":null,"categories":["Tech"],"content":"Eslint Prettier Commitlint Husky","date":1670889600,"description":"Eslint Prettier Commitlint Husky","dir":"post/infrastructure/","excerpt_html":"Eslint Prettier Commitlint Husky","excerpt_text":"Eslint Prettier Commitlint Husky","expirydate":-62135596800,"fuzzywordcount":1700,"html":"Eslint Prettier Commitlint Husky","keywords":null,"kind":"page","lang":"en","lastmod":1670889600,"objectID":"e1d8839f26731b182b871c290a1118db","permalink":"https://chemistwang.github.io/post/infrastructure/code/","publishdate":"2022-12-13T00:00:00Z","readingtime":4,"relpermalink":"/post/infrastructure/code/","section":"post","summary":"前端基建之（一）代码风格和提交规范配置 1. 初始化项目 npx create-react-app demo-framework --template typescript 2. 配置 Eslint 2.1 vscode 安装 eslint 2.2 安装依赖 npm i eslint -D 2.3 初始化 eslint npx eslint --init You can also run this command directly using \u0026#39;npm init @eslint/config\u0026#39;. npx: installed 41","tags":null,"title":"前端基建之（一）代码风格和提交规范配置","type":"post","url":"/post/infrastructure/code/","weight":0,"wordcount":1636},{"author":null,"categories":["Tech"],"content":"","date":1670284800,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1670284800,"objectID":"25deb4ea7cf22877f3f1b7cbac7b8e24","permalink":"https://chemistwang.github.io/post/vim/","publishdate":"2022-12-06T00:00:00Z","readingtime":1,"relpermalink":"/post/vim/","section":"post","summary":"快速选中、删除、复制引号或者括号中的内容 分别更改这些配对标点符号中的文本内容 ci’、ci”、ci(、ci[、ci{、ci\u0026lt; 分别删除这些","tags":null,"title":"我的vim习惯","type":"post","url":"/post/vim/","weight":0,"wordcount":208},{"author":null,"categories":[],"content":"本地可以，线上却不行","date":1670198400,"description":"本地可以，线上却不行","dir":"post/js/","excerpt_html":"本地可以，线上却不行","excerpt_text":"本地可以，线上却不行","expirydate":-62135596800,"fuzzywordcount":200,"html":"本地可以，线上却不行","keywords":null,"kind":"page","lang":"en","lastmod":1670198400,"objectID":"7182667f0798d2269c0fff4dee966331","permalink":"https://chemistwang.github.io/post/js/clipboard/","publishdate":"2022-12-05T00:00:00Z","readingtime":1,"relpermalink":"/post/js/clipboard/","section":"post","summary":"本地实现一个粘贴板功能的时候，用了 navigator.clipboard 却在线上环境无法使用。 原因： 因为 navigator.clipboard 只能在安全网络环境中才能使用，也就是，安全域包括本地访问与开启 TLS 安全认","tags":null,"title":"navigator.clipboard","type":"post","url":"/post/js/clipboard/","weight":0,"wordcount":181},{"author":null,"categories":["ES6"],"content":"探索ES6","date":1668189514,"description":"探索ES6","dir":"post/translate/","excerpt_html":"探索ES6","excerpt_text":"探索ES6","expirydate":-62135596800,"fuzzywordcount":100,"html":"探索ES6","keywords":null,"kind":"page","lang":"en","lastmod":1668189514,"objectID":"1f325627d4de4a7094f83d42965b1c50","permalink":"https://chemistwang.github.io/post/translate/exploringjs/","publishdate":"2022-11-11T17:58:34Z","readingtime":1,"relpermalink":"/post/translate/exploringjs/","section":"post","summary":"Exploring ES6","tags":["译文"],"title":"Exploring ES6 (译文)","type":"post","url":"/post/translate/exploringjs/","weight":0,"wordcount":2},{"author":null,"categories":["Tech"],"content":"Treating warnings as errors because process.env.CI = true.","date":1668124800,"description":"Treating warnings as errors because process.env.CI = true.","dir":"post/jenkins/","excerpt_html":"Treating warnings as errors because process.env.CI = true.","excerpt_text":"Treating warnings as errors because process.env.CI = true.","expirydate":-62135596800,"fuzzywordcount":300,"html":"Treating warnings as errors because process.env.CI = true.","keywords":null,"kind":"page","lang":"en","lastmod":1668124800,"objectID":"2779ece6f022611fce7eabf14b9ab092","permalink":"https://chemistwang.github.io/post/jenkins/fail-1/","publishdate":"2022-11-11T00:00:00Z","readingtime":1,"relpermalink":"/post/jenkins/fail-1/","section":"post","summary":"Jenkins 构建 React 应用失败 配置脚本：Build -\u0026gt; Execute shell #!/bin/sh npm install \u0026amp;\u0026amp; npm run build 报错信息 ... \u0026gt; node scripts/build.js Creating an optimized production build... Treating warnings as errors because process.env.CI = true. Most CI servers set it automatically. Failed to compile. ... 原因： build-fails-on-warning-message Like many other CI tools and platforms,","tags":["jenkins"],"title":"React应用构建失败","type":"post","url":"/post/jenkins/fail-1/","weight":0,"wordcount":215},{"author":null,"categories":["Tech"],"content":"TS","date":1667779200,"description":"TS","dir":"post/ts/","excerpt_html":"TS","excerpt_text":"TS","expirydate":-62135596800,"fuzzywordcount":100,"html":"TS","keywords":null,"kind":"page","lang":"en","lastmod":1667779200,"objectID":"a0c6efe1ad2a61bc2ef2387ffd1e66a7","permalink":"https://chemistwang.github.io/post/ts/ts-config/","publishdate":"2022-11-07T00:00:00Z","readingtime":1,"relpermalink":"/post/ts/ts-config/","section":"post","summary":"strict strict文档 true false The strict flag enables a wide range of type checking behavior that results in stronger guarantees of program correctness. Turning this on is equivalent to enabling all of the strict mode family options, which are outlined below. You can then turn off individual strict mode family checks as needed. Future versions of TypeScript may introduce additional stricter checking under","tags":["ts"],"title":"TS配置文件","type":"post","url":"/post/ts/ts-config/","weight":0,"wordcount":99},{"author":null,"categories":["Tech"],"content":"TS","date":166752e4,"description":"TS","dir":"post/ts/","excerpt_html":"TS","excerpt_text":"TS","expirydate":-62135596800,"fuzzywordcount":600,"html":"TS","keywords":null,"kind":"page","lang":"en","lastmod":166752e4,"objectID":"aa4dd7b5a2e372a177d2143e0e5d626b","permalink":"https://chemistwang.github.io/post/ts/ts-basic/","publishdate":"2022-11-04T00:00:00Z","readingtime":2,"relpermalink":"/post/ts/ts-basic/","section":"post","summary":"type MyType\u0026lt;T\u0026gt; = T extends any ? T : never; // type res = MyType\u0026lt;string | number | boolean\u0026gt; // 1. 从 T 中剔除 U type Res1 = Exclude\u0026lt;string | number, number\u0026gt; // 2. 从 T 中剔除 null undefined type Res2 = NonNullable\u0026lt;string | number | null | undefined\u0026gt; // 3. 获取函数返回值类型 type Res3 = ReturnType\u0026lt;() =\u0026gt; number\u0026gt;","tags":["ts"],"title":"TS 基本玩法","type":"post","url":"/post/ts/ts-basic/","weight":0,"wordcount":588},{"author":null,"categories":["Tech"],"content":"TS","date":1667260800,"description":"TS","dir":"post/ts/","excerpt_html":"TS","excerpt_text":"TS","expirydate":-62135596800,"fuzzywordcount":400,"html":"TS","keywords":null,"kind":"page","lang":"en","lastmod":1667260800,"objectID":"f35af801f6226e79be21bb701f540ba3","permalink":"https://chemistwang.github.io/post/ts/ts-challenges/","publishdate":"2022-11-01T00:00:00Z","readingtime":1,"relpermalink":"/post/ts/ts-challenges/","section":"post","summary":"对 ts 的掌握一定要 练，如果在开发中没有条件的话，这有个宝藏的 Github项目🌟 type-challenges Warm-up 1. Hello World // expected to be string type HelloWorld = any // answer type HelloWorld = string Easy 1. Pick interface Todo { title: string description: string completed: boolean","tags":["ts"],"title":"TS Challenges","type":"post","url":"/post/ts/ts-challenges/","weight":0,"wordcount":371},{"author":null,"categories":["React"],"content":"","date":1664409600,"description":"","dir":"post/react/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1664409600,"objectID":"b372151ff449d9637b99ca6d3b89a2fd","permalink":"https://chemistwang.github.io/post/react/hoc/","publishdate":"2022-09-29T00:00:00Z","readingtime":0,"relpermalink":"/post/react/hoc/","section":"post","summary":"","tags":null,"title":"HOC","type":"post","url":"/post/react/hoc/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"TS","date":1664409600,"description":"TS","dir":"post/ts/","excerpt_html":"TS","excerpt_text":"TS","expirydate":-62135596800,"fuzzywordcount":300,"html":"TS","keywords":null,"kind":"page","lang":"en","lastmod":1664409600,"objectID":"e8dd95dbbd92022b0c591333d5620d18","permalink":"https://chemistwang.github.io/post/ts/ts-error2/","publishdate":"2022-09-29T00:00:00Z","readingtime":1,"relpermalink":"/post/ts/ts-error2/","section":"post","summary":"封装好的组件准备在外层进行调用： interface Props { title: string } function MyComponent(props: Props) { const { title } = props; return \u0026lt;h1\u0026gt;{title}\u0026lt;/h1\u0026gt; } export default MyComponent; 结果 TS 直接报错 ERROR in src/App.tsx:86:6 TS2322: Type \u0026#39;{ children: never[]; title: string; }\u0026#39; is not assignable to type \u0026#39;IntrinsicAttributes \u0026amp; Props\u0026#39;. Property \u0026#39;children\u0026#39; does not exist on","tags":["ts"],"title":"TS2559: Type '{ children: never[]; }' has no properties in common with type 'IntrinsicAttributes'.","type":"post","url":"/post/ts/ts-error2/","weight":0,"wordcount":294},{"author":null,"categories":["React"],"content":"","date":1664409600,"description":"","dir":"post/react/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1664409600,"objectID":"c04d7663f1a7ef5006742e2496d3df68","permalink":"https://chemistwang.github.io/post/react/error-boundary/","publishdate":"2022-09-29T00:00:00Z","readingtime":1,"relpermalink":"/post/react/error-boundary/","section":"post","summary":"错误边界","tags":null,"title":"错误边界","type":"post","url":"/post/react/error-boundary/","weight":0,"wordcount":4},{"author":null,"categories":[],"content":"","date":1663891200,"description":"","dir":"post/js/visibilityState/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1663891200,"objectID":"9f86a50b1fb7d0bf7eafc3d63e39b016","permalink":"https://chemistwang.github.io/post/js/visibilitystate/visibilitystate/","publishdate":"2022-09-23T00:00:00Z","readingtime":1,"relpermalink":"/post/js/visibilitystate/visibilitystate/","section":"post","summary":"参考资料：changing-tab-title-focus-loss 顺便怒推一个 MacOS 的 GIF 制作软件：GIPHY Capture. The GIF Maker 浏览博客的时候，有些博主会","tags":null,"title":"快回来啊，啊好了","type":"post","url":"/post/js/visibilitystate/visibilitystate/","weight":0,"wordcount":272},{"author":null,"categories":[],"content":null,"date":1663804800,"description":"","dir":"post/css/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1663804800,"objectID":"cd522c8138b6f4e14af33e96e74f15fa","permalink":"https://chemistwang.github.io/post/css/change-skin/","publishdate":"2022-09-22T00:00:00Z","readingtime":0,"relpermalink":"/post/css/change-skin/","section":"post","summary":"","tags":null,"title":"css实现换肤","type":"post","url":"/post/css/change-skin/","weight":0,"wordcount":0},{"author":null,"categories":["React"],"content":"","date":1662940800,"description":"","dir":"post/react/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662940800,"objectID":"ca450082f4e3010e593c742776a3210a","permalink":"https://chemistwang.github.io/post/react/optimize/","publishdate":"2022-09-12T00:00:00Z","readingtime":0,"relpermalink":"/post/react/optimize/","section":"post","summary":"","tags":null,"title":"react优化手段","type":"post","url":"/post/react/optimize/","weight":0,"wordcount":0},{"author":null,"categories":[],"content":"","date":1662854400,"description":"","dir":"post/js/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662854400,"objectID":"afdb86f3f2fe0498bfd677b09d699530","permalink":"https://chemistwang.github.io/post/js/webpack-principle/","publishdate":"2022-09-11T00:00:00Z","readingtime":0,"relpermalink":"/post/js/webpack-principle/","section":"post","summary":"","tags":null,"title":"webpack 打包原理","type":"post","url":"/post/js/webpack-principle/","weight":0,"wordcount":0},{"author":null,"categories":[],"content":"","date":1662768e3,"description":"","dir":"post/js/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1662768e3,"objectID":"10d011ee6bd0b50151e9545fe3824786","permalink":"https://chemistwang.github.io/post/js/tree-shaking/","publishdate":"2022-09-10T00:00:00Z","readingtime":1,"relpermalink":"/post/js/tree-shaking/","section":"post","summary":"支持Tree-shaking，必须基于ESM","tags":null,"title":"Tree-Shaking 实现原理","type":"post","url":"/post/js/tree-shaking/","weight":0,"wordcount":22},{"author":null,"categories":["Tech"],"content":"TS","date":1662595200,"description":"TS","dir":"post/ts/","excerpt_html":"TS","excerpt_text":"TS","expirydate":-62135596800,"fuzzywordcount":100,"html":"TS","keywords":null,"kind":"page","lang":"en","lastmod":1662595200,"objectID":"b96e89f3b17b2f6c195ead2deb3b294a","permalink":"https://chemistwang.github.io/post/ts/ts-error1/","publishdate":"2022-09-08T00:00:00Z","readingtime":1,"relpermalink":"/post/ts/ts-error1/","section":"post","summary":"问题求解","tags":["ts"],"title":"Element implicitly has an 'any' type because expression of type 'string' can't be used to index type","type":"post","url":"/post/ts/ts-error1/","weight":0,"wordcount":4},{"author":null,"categories":[],"content":"优雅的传递上下文，哼","date":1661990400,"description":"优雅的传递上下文，哼","dir":"post/js/","excerpt_html":"优雅的传递上下文，哼","excerpt_text":"优雅的传递上下文，哼","expirydate":-62135596800,"fuzzywordcount":900,"html":"优雅的传递上下文，哼","keywords":null,"kind":"page","lang":"en","lastmod":1661990400,"objectID":"83217aa7ec38370caf48ba316a4d60e9","permalink":"https://chemistwang.github.io/post/js/this/","publishdate":"2022-09-01T00:00:00Z","readingtime":2,"relpermalink":"/post/js/this/","section":"post","summary":"再来40道this面试题酸爽继续(1.2w字用手整理) 🔥 来呗，先刷刷题 绑定规则 this 的绑定和函数声明的位置没有任何关系，只取决于函数的调用方式 常","tags":null,"title":"JS体系之五【this】","type":"post","url":"/post/js/this/","weight":0,"wordcount":858},{"author":null,"categories":[],"content":"很重要","date":1661990400,"description":"很重要","dir":"post/js/","excerpt_html":"很重要","excerpt_text":"很重要","expirydate":-62135596800,"fuzzywordcount":100,"html":"很重要","keywords":null,"kind":"page","lang":"en","lastmod":1661990400,"objectID":"7ec37dd3be4b1a642589fd98f7e091f9","permalink":"https://chemistwang.github.io/post/js/dom-event/","publishdate":"2022-09-01T00:00:00Z","readingtime":1,"relpermalink":"/post/js/dom-event/","section":"post","summary":"\u0026lt;div onclick=\u0026#34;console.log(\u0026#39;div\u0026#39;)\u0026#34;\u0026gt; \u0026lt;p onclick=\u0026#34;console.log(\u0026#39;p\u0026#39;)\u0026#34;\u0026gt; Click here! \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; p div 在事件传播过程中，有3个阶段：捕获、目标和冒泡。 默认情况下，事件处理程序在冒泡阶段执行（除非将 useCapture 设置为 true），它从最","tags":null,"title":"JS体系之六【DOM事件】","type":"post","url":"/post/js/dom-event/","weight":0,"wordcount":79},{"author":null,"categories":[],"content":"","date":1661904e3,"description":"","dir":"post/js/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1e3,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1661904e3,"objectID":"fda42f31477d25ff55e7208883c3e9ab","permalink":"https://chemistwang.github.io/post/js/promise/","publishdate":"2022-08-31T00:00:00Z","readingtime":2,"relpermalink":"/post/js/promise/","section":"post","summary":"参考资料： PromiseA+规范 👈 核心要点 Promise状态 一个 promise 必须是 3 种状态之一：pending、fulfilled、rejected pending","tags":null,"title":"JS体系之三【Promise】","type":"post","url":"/post/js/promise/","weight":0,"wordcount":917},{"author":null,"categories":[],"content":"","date":1661904e3,"description":"","dir":"post/js/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1661904e3,"objectID":"8a67c7ab599cac5f363e520c8eab8b3b","permalink":"https://chemistwang.github.io/post/js/object/","publishdate":"2022-08-31T00:00:00Z","readingtime":0,"relpermalink":"/post/js/object/","section":"post","summary":"","tags":null,"title":"JS体系之二【Object】","type":"post","url":"/post/js/object/","weight":0,"wordcount":0},{"author":null,"categories":[],"content":"很重要","date":1661904e3,"description":"很重要","dir":"post/js/","excerpt_html":"很重要","excerpt_text":"很重要","expirydate":-62135596800,"fuzzywordcount":2100,"html":"很重要","keywords":null,"kind":"page","lang":"en","lastmod":1661904e3,"objectID":"89d2554f66689b628ce125d901b33fd2","permalink":"https://chemistwang.github.io/post/js/event-loop/","publishdate":"2022-08-31T00:00:00Z","readingtime":4,"relpermalink":"/post/js/event-loop/","section":"post","summary":"事件循环 推荐下面这个视频，讲的非常好。 JavaScript中的事件循环介绍 -Jake Archibald【Bilibili】 👍 JavaScript中的","tags":null,"title":"JS体系之四【事件循环】","type":"post","url":"/post/js/event-loop/","weight":0,"wordcount":2001},{"author":null,"categories":["React"],"content":null,"date":1661904e3,"description":"","dir":"post/react/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1661904e3,"objectID":"b84df1caea8a7ba9535e594560d52d09","permalink":"https://chemistwang.github.io/post/react/react-router/","publishdate":"2022-08-31T00:00:00Z","readingtime":0,"relpermalink":"/post/react/react-router/","section":"post","summary":"","tags":null,"title":"React-Router 源码","type":"post","url":"/post/react/react-router/","weight":0,"wordcount":0},{"author":null,"categories":[],"content":null,"date":1661385600,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1661385600,"objectID":"17a32c63fa481b5228d52c7a3d3a50a8","permalink":"https://chemistwang.github.io/post/browser-render-principle/","publishdate":"2022-08-25T00:00:00Z","readingtime":0,"relpermalink":"/post/browser-render-principle/","section":"post","summary":"","tags":null,"title":"浏览器渲染原理","type":"post","url":"/post/browser-render-principle/","weight":0,"wordcount":0},{"author":null,"categories":[],"content":"Dynamic import","date":1661351494,"description":"Dynamic import","dir":"post/translate/","excerpt_html":"Dynamic import","excerpt_text":"Dynamic import","expirydate":-62135596800,"fuzzywordcount":1300,"html":"Dynamic import","keywords":null,"kind":"page","lang":"en","lastmod":1661351494,"objectID":"3d32ec0eb2de5747618346dbbf369ada","permalink":"https://chemistwang.github.io/post/translate/dynamic-import/","publishdate":"2022-08-24T14:31:34Z","readingtime":3,"relpermalink":"/post/translate/dynamic-import/","section":"post","summary":"原文地址：Dynamic import( ) 👈 动态导入 动态导入 👈 引入一种新的类似函数形式的导入方式，和静态导入相比，解锁了新的功能。本文比较两者并概述新功能","tags":["译文"],"title":"Dynamic import( )(译文)","type":"post","url":"/post/translate/dynamic-import/","weight":0,"wordcount":1209},{"author":null,"categories":[],"content":"争来争去，还是得统一","date":1661334994,"description":"争来争去，还是得统一","dir":"post/js/","excerpt_html":"争来争去，还是得统一","excerpt_text":"争来争去，还是得统一","expirydate":-62135596800,"fuzzywordcount":200,"html":"争来争去，还是得统一","keywords":null,"kind":"page","lang":"en","lastmod":1661334994,"objectID":"a7ec12b247c608a4eaf2921c1d2cf78d","permalink":"https://chemistwang.github.io/post/js/module/","publishdate":"2022-08-24T09:56:34Z","readingtime":1,"relpermalink":"/post/js/module/","section":"post","summary":"导读 前端模块化开发那点历史 👈 IIFE 定义 IIFE: Immediately Invoked Function Expression，意为 立即调用的函数表达式 为什么需要 IIFE CommonJS AMD CMD UMD ESM // counter.mjs let counter = 10; export default counter; // index.mjs import myCounter from \u0026#39;./counter.mjs\u0026#39;;","tags":null,"title":"JS体系之一【模块化】","type":"post","url":"/post/js/module/","weight":0,"wordcount":190},{"author":null,"categories":[],"content":"JS modules","date":1661248594,"description":"JS modules","dir":"post/translate/","excerpt_html":"JS modules","excerpt_text":"JS modules","expirydate":-62135596800,"fuzzywordcount":6200,"html":"JS modules","keywords":null,"kind":"page","lang":"en","lastmod":1661248594,"objectID":"01d1b2cbd03707fbe8d53b0ed22373fa","permalink":"https://chemistwang.github.io/post/translate/js-modules/","publishdate":"2022-08-23T09:56:34Z","readingtime":13,"relpermalink":"/post/translate/js-modules/","section":"post","summary":"原文地址：JavaScript modules 👈 JavaScript modules JavaScript modules 现在支持所有主流浏览器 👈。 本文解释了如何使用 JS modules，如何正确部署，Chrome 团队在未来","tags":["译文"],"title":"JavaScript modules(译文)","type":"post","url":"/post/translate/js-modules/","weight":0,"wordcount":6109},{"author":null,"categories":["React"],"content":null,"date":1661212800,"description":"","dir":"post/react/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1661212800,"objectID":"ef88a8be651a2526fb00a2afa4dca952","permalink":"https://chemistwang.github.io/post/react/upgrade-to-vite/","publishdate":"2022-08-23T00:00:00Z","readingtime":1,"relpermalink":"/post/react/upgrade-to-vite/","section":"post","summary":"截止当前，46.6k 的 🌟 直逼 webpack。 vite 官网 👈 vite github 👈 由于维护的老项目体积较大，启动比较慢，同时需要借助 jenkins 实现自动化部署，存在多局点多分","tags":null,"title":"CRA项目升级Vite","type":"post","url":"/post/react/upgrade-to-vite/","weight":0,"wordcount":366},{"author":null,"categories":["Tech"],"content":"刚出炉的网站，要是可以在搜索引擎中展示在第一条，那就太棒了","date":1660780800,"description":"刚出炉的网站，要是可以在搜索引擎中展示在第一条，那就太棒了","dir":"post/","excerpt_html":"刚出炉的网站，要是可以在搜索引擎中展示在第一条，那就太棒了","excerpt_text":"刚出炉的网站，要是可以在搜索引擎中展示在第一条，那就太棒了","expirydate":-62135596800,"fuzzywordcount":100,"html":"刚出炉的网站，要是可以在搜索引擎中展示在第一条，那就太棒了","keywords":null,"kind":"page","lang":"en","lastmod":1660780800,"objectID":"c5fe19e064e953a9042b649f7ad81ccf","permalink":"https://chemistwang.github.io/post/seo/","publishdate":"2022-08-18T00:00:00Z","readingtime":1,"relpermalink":"/post/seo/","section":"post","summary":"参考资料：搜索引擎优化 (SEO) 新手指南","tags":null,"title":"如何进行SEO优化","type":"post","url":"/post/seo/","weight":0,"wordcount":16},{"author":null,"categories":["React"],"content":null,"date":1660608e3,"description":"","dir":"post/react/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1660608e3,"objectID":"600bea3c45daddd7063d843c95a2b6b0","permalink":"https://chemistwang.github.io/post/react/avoid-rerender/","publishdate":"2022-08-16T00:00:00Z","readingtime":0,"relpermalink":"/post/react/avoid-rerender/","section":"post","summary":"","tags":null,"title":"如何避免重复渲染","type":"post","url":"/post/react/avoid-rerender/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"那顿火锅没白吃","date":1660521600,"description":"那顿火锅没白吃","dir":"post/","excerpt_html":"那顿火锅没白吃","excerpt_text":"那顿火锅没白吃","expirydate":-62135596800,"fuzzywordcount":100,"html":"那顿火锅没白吃","keywords":null,"kind":"page","lang":"en","lastmod":1660521600,"objectID":"81a9463e8f418d4f229fdf4ffa38417e","permalink":"https://chemistwang.github.io/post/why-linux-dir-4096/","publishdate":"2022-08-15T00:00:00Z","readingtime":0,"relpermalink":"/post/why-linux-dir-4096/","section":"post","summary":"","tags":null,"title":"为什么Linux空目录默认4096大小","type":"post","url":"/post/why-linux-dir-4096/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"Base64VLQ的编码与解码","date":1660176e3,"description":"Base64VLQ的编码与解码","dir":"post/","excerpt_html":"Base64VLQ的编码与解码","excerpt_text":"Base64VLQ的编码与解码","expirydate":-62135596800,"fuzzywordcount":1700,"html":"Base64VLQ的编码与解码","keywords":null,"kind":"page","lang":"en","lastmod":1660176e3,"objectID":"e0701218e746082625ac23bf787bb747","permalink":"https://chemistwang.github.io/post/base64-vlq/","publishdate":"2022-08-11T00:00:00Z","readingtime":4,"relpermalink":"/post/base64-vlq/","section":"post","summary":"sourcemap 参考资料： Introduction to JavaScript Source Maps Source Map Revision 3 Proposal 文件结构 { \u0026#34;version\u0026#34;: 3, \u0026#34;file\u0026#34;: \u0026#39;react.development.js\u0026#39;, \u0026#34;sources\u0026#34;: [ \u0026#34;/Users/wyl/github/debug-react/react/packages/shared/ReactVersion.js\u0026#34;, \u0026#34;/Users/wyl/github/debug-react/react/packages/shared/ReactSymbols.js\u0026#34;, \u0026#34;/Users/wyl/github/debug-react/react/packages/react/src/ReactCurrentDispatcher.js\u0026#34;, ... ], \u0026#34;sourcesContent\u0026#34;: [ \u0026#34;/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n// TODO:","tags":null,"title":"sourcemap中的Base64VLQ","type":"post","url":"/post/base64-vlq/","weight":0,"wordcount":1676},{"author":null,"categories":["React"],"content":null,"date":1660089600,"description":"","dir":"post/react/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1660089600,"objectID":"de43229c632720a24c1b5e6c5838d8de","permalink":"https://chemistwang.github.io/post/react/reconciler/","publishdate":"2022-08-10T00:00:00Z","readingtime":9,"relpermalink":"/post/react/reconciler/","section":"post","summary":"导读 因为是 【render 阶段】，所以会包含 mount（初始化） 和 update（更新） 两种情况。 双缓存池 这个是 React 实现更新的一个策略。可以追溯在","tags":null,"title":"「React源码之五」 Reconciler 工作阶段【render阶段】","type":"post","url":"/post/react/reconciler/","weight":0,"wordcount":4398},{"author":null,"categories":["React"],"content":"面试官：请简单介绍下Fiber","date":1660003200,"description":"面试官：请简单介绍下Fiber","dir":"post/react/","excerpt_html":"面试官：请简单介绍下Fiber","excerpt_text":"面试官：请简单介绍下Fiber","expirydate":-62135596800,"fuzzywordcount":400,"html":"面试官：请简单介绍下Fiber","keywords":null,"kind":"page","lang":"en","lastmod":1660003200,"objectID":"e7631f23b1cca4736d90f7a330eed280","permalink":"https://chemistwang.github.io/post/react/fiber/","publishdate":"2022-08-09T00:00:00Z","readingtime":1,"relpermalink":"/post/react/fiber/","section":"post","summary":"Fiber vs Stack Demo 👈 结构 源码位置： react/packages/react-reconciler/src/ReactFiber.old.js 👈 function FiberNode( tag: WorkTag, pendingProps: mixed, key: null | string, mode: TypeOfMode, ) { // Instance this.tag = tag; this.key = key; this.elementType = null; this.type = null; this.stateNode = null; // Fiber this.return = null; this.child = null; this.sibling = null; this.index = 0; this.ref = null; this.pendingProps = pendingProps; this.memoizedProps = null; this.updateQueue =","tags":null,"title":"「React源码之四」【前置知识二】 Fiber","type":"post","url":"/post/react/fiber/","weight":0,"wordcount":375},{"author":null,"categories":["React"],"content":"JSX如何转化为FiberNode","date":1659657600,"description":"JSX如何转化为FiberNode","dir":"post/react/","excerpt_html":"JSX如何转化为FiberNode","excerpt_text":"JSX如何转化为FiberNode","expirydate":-62135596800,"fuzzywordcount":1800,"html":"JSX如何转化为FiberNode","keywords":null,"kind":"page","lang":"en","lastmod":1659657600,"objectID":"722096cdb5b7d4ece78af55783d01951","permalink":"https://chemistwang.github.io/post/react/jsx/","publishdate":"2022-08-05T00:00:00Z","readingtime":4,"relpermalink":"/post/react/jsx/","section":"post","summary":"在准备步入 Reconciler 阶段之前，先了解下 JSX 将会如何被编译，并且编译之后的对象会有哪些属性。 JSX to Fiber 在 Babel 官网中，下面这个例子 function hello() { return \u0026lt;div id=\u0026#34;hello\u0026#34;\u0026gt; \u0026lt;h1 className=\u0026#34;title\u0026#34;\u0026gt;This is Header\u0026lt;/h1\u0026gt; \u0026lt;span\u0026gt;This is Content\u0026lt;/span\u0026gt; \u0026lt;a\u0026gt;link\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt;","tags":null,"title":"「React源码之三」【前置知识一】JSX","type":"post","url":"/post/react/jsx/","weight":0,"wordcount":1708},{"author":null,"categories":["React"],"content":null,"date":1659571200,"description":"","dir":"post/react/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1659571200,"objectID":"265d70a7b8143d728c189ea131b86001","permalink":"https://chemistwang.github.io/post/react/react-pre-read/","publishdate":"2022-08-04T00:00:00Z","readingtime":1,"relpermalink":"/post/react/react-pre-read/","section":"post","summary":"对于源码的阅读一开始一定要不求甚解 查看源码剔除细节上的判断语句 重大版本更新 一开始不妨介绍下 React 的几个重大的节点。正所谓了解一个框架就要了解它的","tags":null,"title":"「React源码之二」 导读","type":"post","url":"/post/react/react-pre-read/","weight":0,"wordcount":254},{"author":null,"categories":["React"],"content":null,"date":1659484800,"description":"","dir":"post/react/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1659484800,"objectID":"7fe54b880a4461611aff0f1e784701a7","permalink":"https://chemistwang.github.io/post/react/react-debug-env/","publishdate":"2022-08-03T00:00:00Z","readingtime":4,"relpermalink":"/post/react/react-debug-env/","section":"post","summary":"实现目标：在 VSCode 中执行断点调试 官方Github仓库中 👈 的 React原始源码 并可以定位到具体文件 版本说明：React18.02 思路说明：利用源码","tags":null,"title":"「React源码之一」 搭建源码调试环境","type":"post","url":"/post/react/react-debug-env/","weight":0,"wordcount":1715},{"author":null,"categories":["Tech"],"content":"Babel is a JavaScript compiler","date":1659484800,"description":"Babel is a JavaScript compiler","dir":"post/","excerpt_html":"Babel is a JavaScript compiler","excerpt_text":"Babel is a JavaScript compiler","expirydate":-62135596800,"fuzzywordcount":500,"html":"Babel is a JavaScript compiler","keywords":null,"kind":"page","lang":"en","lastmod":1659484800,"objectID":"a6fa8238e8dc6bc5f413938fdb5075d0","permalink":"https://chemistwang.github.io/post/how-to-babel-works/","publishdate":"2022-08-03T00:00:00Z","readingtime":1,"relpermalink":"/post/how-to-babel-works/","section":"post","summary":"Babel is a JavaScript compiler. Babal 是一个 JavaScript 编译器。 Babel工作流 AST AST在线解析 // 举个例子 let a = 7; // 转化成 { \u0026#34;type\u0026#34;: \u0026#34;Program\u0026#34;, \u0026#34;start\u0026#34;: 0, \u0026#34;end\u0026#34;: 193, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;VariableDeclaration\u0026#34;, \u0026#34;start\u0026#34;: 181, \u0026#34;end\u0026#34;: 191, \u0026#34;declarations\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;VariableDeclarator\u0026#34;, \u0026#34;start\u0026#34;: 185, \u0026#34;end\u0026#34;: 190, \u0026#34;id\u0026#34;: {","tags":null,"title":"Babel工作原理","type":"post","url":"/post/how-to-babel-works/","weight":0,"wordcount":417},{"author":null,"categories":null,"content":null,"date":1659468720,"description":"","dir":"post/hello-world/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1659468720,"objectID":"d73e4165919e3028f499ce52fa4ba4b4","permalink":"https://chemistwang.github.io/post/hello-world/hello-world/","publishdate":"2022-08-02T19:32:00Z","readingtime":1,"relpermalink":"/post/hello-world/hello-world/","section":"post","summary":"“Well, let\u0026rsquo;s begin. ” Hello World! Hello Blog! Hello Hugo!","tags":null,"title":"Welcome to Chemputer Blog","type":"post","url":"/post/hello-world/hello-world/","weight":0,"wordcount":15},{"author":null,"categories":["Tech"],"content":"是时候升级了","date":1658141350,"description":"是时候升级了","dir":"post/","excerpt_html":"是时候升级了","excerpt_text":"是时候升级了","expirydate":-62135596800,"fuzzywordcount":400,"html":"是时候升级了","keywords":null,"kind":"page","lang":"en","lastmod":1658141350,"objectID":"d0dbca735e521cfa8a0498cef4b1fa1b","permalink":"https://chemistwang.github.io/post/nginx-http2/","publishdate":"2022-07-18T10:49:10Z","readingtime":1,"relpermalink":"/post/nginx-http2/","section":"post","summary":"配置http2 http2 速度渲染比较 👈 鉴于 http2 协议的诸多优点，想升级一下自己的静态网页。 官方 Nginx 默认不包含 h2 模块，需要加入参数编译 查看编译模块, 发现只有","tags":null,"title":"Nginx配置http2","type":"post","url":"/post/nginx-http2/","weight":0,"wordcount":308},{"author":null,"categories":["Tech"],"content":"BIM应用科普","date":1655942400,"description":"BIM应用科普","dir":"post/","excerpt_html":"BIM应用科普","excerpt_text":"BIM应用科普","expirydate":-62135596800,"fuzzywordcount":1100,"html":"BIM应用科普","keywords":null,"kind":"page","lang":"en","lastmod":1655942400,"objectID":"aa5b47c6eedc503fa4956efd54bd1bdd","permalink":"https://chemistwang.github.io/post/bim-application/","publishdate":"2022-06-23T00:00:00Z","readingtime":3,"relpermalink":"/post/bim-application/","section":"post","summary":"BIM 应用 BIM + 模型轻量化 应用阶段轻量化 Revit 模型 -\u0026gt; 网页 （ Revit 模型是不能直接放上去的，需要格式转化） 转化工具：Gltf ｜ 3D Tiles 如何轻量化 BIM平台 Revit Catia Bentley 业","tags":null,"title":"BIM 及其应用（科普篇）","type":"post","url":"/post/bim-application/","weight":0,"wordcount":1032},{"author":null,"categories":["Tech"],"content":"有时候部署的多了真的就不想手动部署了","date":1646052533,"description":"有时候部署的多了真的就不想手动部署了","dir":"post/","excerpt_html":"有时候部署的多了真的就不想手动部署了","excerpt_text":"有时候部署的多了真的就不想手动部署了","expirydate":-62135596800,"fuzzywordcount":1400,"html":"有时候部署的多了真的就不想手动部署了","keywords":null,"kind":"page","lang":"en","lastmod":1646052533,"objectID":"bbdbc72b4b7292f8d798a4673d2a1725","permalink":"https://chemistwang.github.io/post/jenkins-workflow/","publishdate":"2022-02-28T12:48:53Z","readingtime":3,"relpermalink":"/post/jenkins-workflow/","section":"post","summary":"使用Docker启动Jenkins并进行自动化部署前端项目 Jenkins有哪些功能 定时拉取代码并编译（开发） 静态代码分析（开发） 定时打包发布","tags":null,"title":"Jenkins自动化部署前端页面","type":"post","url":"/post/jenkins-workflow/","weight":0,"wordcount":1329},{"author":null,"categories":["Tech"],"content":"代码检查工具","date":1636828142,"description":"代码检查工具","dir":"post/","excerpt_html":"代码检查工具","excerpt_text":"代码检查工具","expirydate":-62135596800,"fuzzywordcount":400,"html":"代码检查工具","keywords":null,"kind":"page","lang":"en","lastmod":1636828142,"objectID":"777460bc8cc97c215a9ad6d334183695","permalink":"https://chemistwang.github.io/post/install-sonarqube/","publishdate":"2021-11-13T18:29:02Z","readingtime":1,"relpermalink":"/post/install-sonarqube/","section":"post","summary":"安装 参考资料 官方文档 macOS docker run --name sonarqube --privileged=true -p 11111:9000 -p 11112:9092 sonarqube ubuntu root 创建 sonarqube 用户 # 创建sonarqube并指定目录 useradd -d /home/sonarqube -m sonarqube # 设置密码 passwd sonarqube 给 sonarqube 添加 sudo 权限 否则会报错 sonarqube","tags":null,"title":"SonarQube安装","type":"post","url":"/post/install-sonarqube/","weight":0,"wordcount":309},{"author":null,"categories":["Tech"],"content":"","date":1633460400,"description":"","dir":"post/frp-raspberrypi/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633460400,"objectID":"8af98507d7a1f7074fab63b4dd592f31","permalink":"https://chemistwang.github.io/post/frp-raspberrypi/vnc/","publishdate":"2021-10-05T19:00:00Z","readingtime":1,"relpermalink":"/post/frp-raspberrypi/vnc/","section":"post","summary":"VNC 无法显示 问题描述：树莓派开启 VNC 之后，想通过 VNC 连接，但总是显示 Cannot currently show the desktop 原因：如果树莓派未检测到 hdmi，则默认不输出信号 解决方案： 获取 ip 地","tags":["raspberrypi"],"title":"VNC连接树莓派无法显示","type":"post","url":"/post/frp-raspberrypi/vnc/","weight":0,"wordcount":118},{"author":null,"categories":["Tech"],"content":"","date":1633287600,"description":"","dir":"post/frp-raspberrypi/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1633287600,"objectID":"02ba4106d5bae5ddfed4fa5b541d4d39","permalink":"https://chemistwang.github.io/post/frp-raspberrypi/index/","publishdate":"2021-10-03T19:00:00Z","readingtime":2,"relpermalink":"/post/frp-raspberrypi/index/","section":"post","summary":"FRP 内网穿透 SSH 连接树莓派 前提：必须有一个有公网 IP 的服务器 安装 查看树莓派和云服务器对应架构 # Raspberry Pi ~ $ uname -a Linux raspberrypi 5.10.17-v7l+ #1414 SMP Fri Apr 30 13:20:47 BST 2021 armv7l GNU/Linux # Server ~ $ uname -a Linux","tags":["raspberrypi","内网穿透"],"title":"FRP 内网穿透 SSH 连接树莓派","type":"post","url":"/post/frp-raspberrypi/index/","weight":0,"wordcount":571},{"author":null,"categories":["Tech"],"content":"Version value must be a string; got a NilClass () (TypeError)","date":1630972800,"description":"Version value must be a string; got a NilClass () (TypeError)","dir":"post/","excerpt_html":"Version value must be a string; got a NilClass () (TypeError)","excerpt_text":"Version value must be a string; got a NilClass () (TypeError)","expirydate":-62135596800,"fuzzywordcount":100,"html":"Version value must be a string; got a NilClass () (TypeError)","keywords":null,"kind":"page","lang":"en","lastmod":1630972800,"objectID":"327d0df48c8b9bb6c1b5d6f64981d517","permalink":"https://chemistwang.github.io/post/brew-error/","publishdate":"2021-09-07T00:00:00Z","readingtime":1,"relpermalink":"/post/brew-error/","section":"post","summary":"MacOS 11.1 Version value must be a string; got a NilClass () (TypeError) 好久没用brew，今天发现直接报错 原因： 发现跟我更新系统有关 解决方案： 同时更新brew brew update-reset","tags":null,"title":"Brew: Version value must be a string; got a NilClass","type":"post","url":"/post/brew-error/","weight":0,"wordcount":58},{"author":null,"categories":["React"],"content":"从零到一构建自己的React","date":1630519114,"description":"从零到一构建自己的React","dir":"post/translate/","excerpt_html":"从零到一构建自己的React","excerpt_text":"从零到一构建自己的React","expirydate":-62135596800,"fuzzywordcount":7500,"html":"从零到一构建自己的React","keywords":null,"kind":"page","lang":"en","lastmod":1630519114,"objectID":"9ac2e0510569774432563b233754d2e3","permalink":"https://chemistwang.github.io/post/translate/build-your-own-react/","publishdate":"2021-09-01T17:58:34Z","readingtime":15,"relpermalink":"/post/translate/build-your-own-react/","section":"post","summary":"参考资料: build-your-own-react 构建自己的 React ⚠️【注】因本人水平有限，部分语句使用意译。会根据水平提升及时修正完善🧐 Rodrigo Pombo November 13, 2019 我们准备一步一步重写 React。下","tags":["译文"],"title":"Build Your Own React (译文)","type":"post","url":"/post/translate/build-your-own-react/","weight":0,"wordcount":7475},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"about/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"https://chemistwang.github.io/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/about/","section":"","summary":"About Me Coding Boy used to be in A Lab","tags":null,"title":"","type":"page","url":"/about/","weight":0,"wordcount":10},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notes/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"1ede8046f9c3a02d422dea7bbf324e64","permalink":"https://chemistwang.github.io/notes/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/notes/","section":"","summary":"💻 我的学习笔记 我的在线简历 My React Project My Vue Project My Flutter Project My Rust Project","tags":null,"title":"","type":"page","url":"/notes/","weight":0,"wordcount":25},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"post/js/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c50d3c63d1e86bf7fa31ea201f6a7670","permalink":"https://chemistwang.github.io/post/js/sentry/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/post/js/sentry/","section":"post","summary":"// 二进制流导出版本2 export const StreamDownloadV2 = (res: any) =\u0026gt; { const { headers } = res; const content = headers[\u0026lsquo;content-disposition\u0026rsquo;]; //eg: \u0026lsquo;attachment;filename=%E5%BE%85%E5%AE%A1%E6%A0%B8%E5%B7%A5%E4%BD%9C%E4%BA%BA%E5%91%98%E5%AF%BC%E5%87%BA.xlsx const filename = decodeURIComponent(content.split(\u0026rsquo;;\u0026rsquo;)[1].split(\u0026rsquo;=\u0026rsquo;)[1]); const url = window.URL.createObjectURL(new Blob([res.data])); var link = document.createElement(\u0026lsquo;a\u0026rsquo;); link.style.display = \u0026rsquo;none\u0026rsquo;; link.href = url; link.setAttribute(\u0026lsquo;download\u0026rsquo;, filename) // window.URL.revokeObjectURL(url); document.body.appendChild(link); link.click(); document.body.removeChild(link); } 二进制流下载 444..png 会有下划线 Line","tags":null,"title":"","type":"post","url":"/post/js/sentry/","weight":0,"wordcount":104},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"https://chemistwang.github.io/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":"Archive of historical posts.","date":-62135596800,"description":"Archive of historical posts.","dir":"archive/","excerpt_html":"Archive of historical posts.","excerpt_text":"Archive of historical posts.","expirydate":-62135596800,"fuzzywordcount":100,"html":"Archive of historical posts.","keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a06e5ce9eca4c3260843078104889780","permalink":"https://chemistwang.github.io/archive/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/archive/","section":"","summary":"","tags":null,"title":"Posts Archive","type":"archive","url":"/archive/","weight":0,"wordcount":0}]