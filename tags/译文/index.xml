<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>译文 on Chemputer Blog</title><link>https://chemistwang.github.io/tags/%E8%AF%91%E6%96%87/</link><description>Recent content in 译文 on Chemputer Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 11 Nov 2022 17:58:34 +0000</lastBuildDate><atom:link href="https://chemistwang.github.io/tags/%E8%AF%91%E6%96%87/index.xml" rel="self" type="application/rss+xml"/><item><title>Exploring ES6 (译文)</title><link>https://chemistwang.github.io/post/translate/exploringjs/</link><pubDate>Fri, 11 Nov 2022 17:58:34 +0000</pubDate><guid>https://chemistwang.github.io/post/translate/exploringjs/</guid><description>Exploring ES6</description></item><item><title>Dynamic import( )(译文)</title><link>https://chemistwang.github.io/post/translate/dynamic-import/</link><pubDate>Wed, 24 Aug 2022 14:31:34 +0000</pubDate><guid>https://chemistwang.github.io/post/translate/dynamic-import/</guid><description>原文地址：Dynamic import( ) 👈 动态导入 动态导入 👈 引入一种新的类似函数形式的导入方式，和静态导入相比，解锁了新的功能。本文比较两者并概述新功能</description></item><item><title>JavaScript modules(译文)</title><link>https://chemistwang.github.io/post/translate/js-modules/</link><pubDate>Tue, 23 Aug 2022 09:56:34 +0000</pubDate><guid>https://chemistwang.github.io/post/translate/js-modules/</guid><description>原文地址：JavaScript modules 👈 JavaScript modules JavaScript modules 现在支持所有主流浏览器 👈。 本文解释了如何使用 JS modules，如何正确部署，Chrome 团队在未来</description></item><item><title>Build Your Own React (译文)</title><link>https://chemistwang.github.io/post/translate/build-your-own-react/</link><pubDate>Wed, 01 Sep 2021 17:58:34 +0000</pubDate><guid>https://chemistwang.github.io/post/translate/build-your-own-react/</guid><description>参考资料: build-your-own-react 构建自己的 React ⚠️【注】因本人水平有限，部分语句使用意译。会根据水平提升及时修正完善🧐 Rodrigo Pombo November 13, 2019 我们准备一步一步重写 React。下</description></item></channel></rss>