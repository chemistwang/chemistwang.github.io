<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tech on Chemputer Blog</title><link>https://chemistwang.github.io/categories/tech/</link><description>Recent content in Tech on Chemputer Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 16 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://chemistwang.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>WebRTC（一）简介和基本原理</title><link>https://chemistwang.github.io/post/webrtc/</link><pubDate>Thu, 16 Feb 2023 00:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/webrtc/</guid><description>WebRTC WebRTC（Web Real-Time Communication），是一个支持网页浏览器进行实时语音对话或视频对话的 API。它于 2011 年 6 月 1 日开源并在 Goo</description></item><item><title>BFF（三）Serverless</title><link>https://chemistwang.github.io/post/bff/serverless/</link><pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/bff/serverless/</guid><description>1. BFF 问题 复杂性增加：添加 BFF 层会增加系统的复杂性，因为它需要在后端 API 和前端应用程序之间处理请求和响应 性能问题：如果 BFF 层的实现不当，可能会导致性</description></item><item><title>BFF（二）BFF的落地实现</title><link>https://chemistwang.github.io/post/bff/code/</link><pubDate>Tue, 10 Jan 2023 00:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/bff/code/</guid><description>BFF 的落地实现 Github 完整项目地址 1. 前置知识 聊聊 Node.js RPC（一）— 协议 RPC(Remote Procedure Call) 是远程过程调用的缩写，是一种通信协议，允许程序在不同的计算机上相互调用远程</description></item><item><title>BFF（一）BFF架构演进</title><link>https://chemistwang.github.io/post/bff/evolution/</link><pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/bff/evolution/</guid><description>BFF 架构演进 1. 单体服务 单体服务是指一个独立的应用程序，包含了所有的功能和业务逻辑。这种架构方式在小型应用程序中很常见 随着应用程序的功能越来越多</description></item><item><title>微前端【qiankun】小试（二）添加主应用和子应用视图</title><link>https://chemistwang.github.io/post/micro-frontend/base-react/base-react/</link><pubDate>Tue, 03 Jan 2023 17:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/micro-frontend/base-react/base-react/</guid><description>上一篇似乎一个初步的 demo 就已经跑起来了，在实践中我遇到过单点应用跳转多平台的需求，不妨趁机试着做成一个完整的 demo。 添加主应用和子应用视图 1.</description></item><item><title>微前端【qiankun】小试（一）主应用和子应用初始化</title><link>https://chemistwang.github.io/post/micro-frontend/init/init/</link><pubDate>Tue, 03 Jan 2023 13:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/micro-frontend/init/init/</guid><description>主应用和子应用初始化 基于 qiankun 2.8.4 前期准备 分别创建主应用和子应用 # 创建 base-react npx create-react-app base-react # 创建 mini-react18 npx create-react-app mini-react18 # 创建 mini-vue2 vue create mini-vue2 创建 .env 指定具体端口，方便管理 应用 端口 base-react 11110</description></item><item><title>前端基建之（七）web 安全扫描方案：OWASP ZAP</title><link>https://chemistwang.github.io/post/infrastructure/owasp/</link><pubDate>Mon, 19 Dec 2022 00:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/infrastructure/owasp/</guid><description/></item><item><title>前端基建之（六）代码 Review：Sonarqube</title><link>https://chemistwang.github.io/post/infrastructure/sonarqube/</link><pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/infrastructure/sonarqube/</guid><description/></item><item><title>前端基建之（五）自动化部署：Jenkins 安装和配置</title><link>https://chemistwang.github.io/post/infrastructure/jenkins/</link><pubDate>Sat, 17 Dec 2022 00:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/infrastructure/jenkins/</guid><description/></item><item><title>前端基建之（四）测试代码：Jest</title><link>https://chemistwang.github.io/post/infrastructure/jest/</link><pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/infrastructure/jest/</guid><description/></item><item><title>前端基建之（三）Git 分支策略和 GitFlow 工作流</title><link>https://chemistwang.github.io/post/infrastructure/gitflow/</link><pubDate>Thu, 15 Dec 2022 00:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/infrastructure/gitflow/</guid><description/></item><item><title>前端基建之（二）项目约定</title><link>https://chemistwang.github.io/post/infrastructure/convention/</link><pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/infrastructure/convention/</guid><description>前端基建之（二）项目约定 1. 技术约定 React（v18） React-Router V6 React-Redux Typescript 2. 命名 变量禁止拼音 文件夹用驼峰命名 参考的规范链接 凹凸实验室 腾讯 alloyteam 代码规范 百度 FEX</description></item><item><title>前端基建之（一）代码风格和提交规范配置</title><link>https://chemistwang.github.io/post/infrastructure/code/</link><pubDate>Tue, 13 Dec 2022 00:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/infrastructure/code/</guid><description>前端基建之（一）代码风格和提交规范配置 1. 初始化项目 npx create-react-app demo-framework --template typescript 2. 配置 Eslint 2.1 vscode 安装 eslint 2.2 安装依赖 npm i eslint -D 2.3 初始化 eslint npx eslint --init You can also run this command directly using &amp;#39;npm init @eslint/config&amp;#39;. npx: installed 41</description></item><item><title>React应用构建失败</title><link>https://chemistwang.github.io/post/jenkins/fail-1/</link><pubDate>Fri, 11 Nov 2022 00:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/jenkins/fail-1/</guid><description>Jenkins 构建 React 应用失败 配置脚本：Build -&amp;gt; Execute shell #!/bin/sh npm install &amp;amp;&amp;amp; npm run build 报错信息 ... &amp;gt; node scripts/build.js Creating an optimized production build... Treating warnings as errors because process.env.CI = true. Most CI servers set it automatically. Failed to compile. ... 原因： build-fails-on-warning-message Like many other CI tools and platforms,</description></item><item><title>TS2559: Type '{ children: never[]; }' has no properties in common with type 'IntrinsicAttributes'.</title><link>https://chemistwang.github.io/post/ts/ts-error2/</link><pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/ts/ts-error2/</guid><description>封装好的组件准备在外层进行调用： interface Props { title: string } function MyComponent(props: Props) { const { title } = props; return &amp;lt;h1&amp;gt;{title}&amp;lt;/h1&amp;gt; } export default MyComponent; 结果 TS 直接报错 ERROR in src/App.tsx:86:6 TS2322: Type &amp;#39;{ children: never[]; title: string; }&amp;#39; is not assignable to type &amp;#39;IntrinsicAttributes &amp;amp; Props&amp;#39;. Property &amp;#39;children&amp;#39; does not exist on</description></item><item><title>Nginx配置http2</title><link>https://chemistwang.github.io/post/nginx-http2/</link><pubDate>Mon, 18 Jul 2022 10:49:10 +0000</pubDate><guid>https://chemistwang.github.io/post/nginx-http2/</guid><description>配置http2 http2 速度渲染比较 👈 鉴于 http2 协议的诸多优点，想升级一下自己的静态网页。 官方 Nginx 默认不包含 h2 模块，需要加入参数编译 查看编译模块, 发现只有</description></item><item><title>Jenkins自动化部署前端页面</title><link>https://chemistwang.github.io/post/jenkins-workflow/</link><pubDate>Mon, 28 Feb 2022 12:48:53 +0000</pubDate><guid>https://chemistwang.github.io/post/jenkins-workflow/</guid><description>使用Docker启动Jenkins并进行自动化部署前端项目 Jenkins有哪些功能 定时拉取代码并编译（开发） 静态代码分析（开发） 定时打包发布</description></item><item><title>SonarQube安装</title><link>https://chemistwang.github.io/post/install-sonarqube/</link><pubDate>Sat, 13 Nov 2021 18:29:02 +0000</pubDate><guid>https://chemistwang.github.io/post/install-sonarqube/</guid><description>安装 参考资料 官方文档 macOS docker run --name sonarqube --privileged=true -p 11111:9000 -p 11112:9092 sonarqube ubuntu root 创建 sonarqube 用户 # 创建sonarqube并指定目录 useradd -d /home/sonarqube -m sonarqube # 设置密码 passwd sonarqube 给 sonarqube 添加 sudo 权限 否则会报错 sonarqube</description></item><item><title>VNC连接树莓派无法显示</title><link>https://chemistwang.github.io/post/frp-raspberrypi/vnc/</link><pubDate>Tue, 05 Oct 2021 19:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/frp-raspberrypi/vnc/</guid><description>VNC 无法显示 问题描述：树莓派开启 VNC 之后，想通过 VNC 连接，但总是显示 Cannot currently show the desktop 原因：如果树莓派未检测到 hdmi，则默认不输出信号 解决方案： 获取 ip 地</description></item><item><title>FRP 内网穿透 SSH 连接树莓派</title><link>https://chemistwang.github.io/post/frp-raspberrypi/index/</link><pubDate>Sun, 03 Oct 2021 19:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/frp-raspberrypi/index/</guid><description>FRP 内网穿透 SSH 连接树莓派 前提：必须有一个有公网 IP 的服务器 安装 查看树莓派和云服务器对应架构 # Raspberry Pi ~ $ uname -a Linux raspberrypi 5.10.17-v7l+ #1414 SMP Fri Apr 30 13:20:47 BST 2021 armv7l GNU/Linux # Server ~ $ uname -a Linux</description></item><item><title>Brew: Version value must be a string; got a NilClass</title><link>https://chemistwang.github.io/post/brew-error/</link><pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate><guid>https://chemistwang.github.io/post/brew-error/</guid><description>MacOS 11.1 Version value must be a string; got a NilClass () (TypeError) 好久没用brew，今天发现直接报错 原因： 发现跟我更新系统有关 解决方案： 同时更新brew brew update-reset</description></item></channel></rss>